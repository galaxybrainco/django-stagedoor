[project]
name = "django-stagedoor"
dynamic = ["version"]
description = "Add your description here"
requires-python = ">=3.10"
readme = "README.md"
authors = [
    { name = "Philip James", email = "phildini@phildini.net" }
]
dependencies = [
    "django>=4.2",
    "django-phonenumber-field[phonenumbers]>=8.0.0",
    "twilio>=9.5.1",
]

[dependency-groups]
dev = [
    "coverage>=7.8.0",
    "ipdb>=0.13.13",
    "isort>=6.0.1",
    "mypy>=1.16.0",
    "ruff>=0.11.13",
    "pytest>=8.0.0",
    "pytest-django>=4.8.0",
    "pytest-cov>=4.0.0",
    "pre-commit>=3.5.0",
    "django-stubs>=4.2.0",
    "bandit[toml]>=1.7.0",
    "commitizen>=3.0.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.version]
path = "src/stagedoor/__init__.py"

[tool.hatch.build.targets.sdist]
include = ["src/stagedoor"]

[tool.hatch.build.targets.wheel]
packages = ["src/stagedoor"]

[tool.isort]
skip = [".venv", ".tox"]

[tool.tox]
requires = ["tox>=4.19"]

[tool.tox.env_run_base]
allowlist_externals = ["coverage"]
description = "Run test under {base_python}"
commands = [["coverage", "run", "runtests.py"]]

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]

[tool.ruff.lint.per-file-ignores]
"migrations/*.py" = ["E501", "F401"]
"**/settings/*.py" = ["F403", "F405"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.12"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = false
warn_redundant_casts = true
warn_unused_configs = true

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "tests.settings"
python_files = ["tests.py", "test_*.py", "*_tests.py"]
pythonpath = ["src"]
addopts = [
    "--tb=short",
    "--strict-markers",
    "--strict-config",
    "--cov=stagedoor",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-branch",
    "--cov-fail-under=90",
]
testpaths = ["src/tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["src/stagedoor"]
branch = true
omit = [
    "*/migrations/*",
    "*/tests/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
fail_under = 90
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv"]
skips = ["B101", "B105"]  # Skip assert_used test

[tool.pydocstyle]
inherit = false
match = "(?!test_)(?!migrations).*\\.py"
match-dir = "(?!migrations)(?!tests)(?!venv)(?!.venv).*"
convention = "google"

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.1.0"
tag_format = "v$version"
version_files = [
    "src/stagedoor/__init__.py:__version__"
]
